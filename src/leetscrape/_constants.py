# List of problem categories
CATEGORIES = [
    {"slug": "algorithms", "name": "Algorithms"},
    {"slug": "database", "name": "Database"},
    {"slug": "shell", "name": "Shell"},
    {"slug": "concurrency", "name": "Concurrency"},
]

# List of topic tags
TOPIC_TAGS = [
    {"slug": "array", "name": "Array"},
    {"slug": "string", "name": "String"},
    {"slug": "hash-table", "name": "Hash Table"},
    {"slug": "dynamic-programming", "name": "Dynamic Programming"},
    {"slug": "math", "name": "Math"},
    {"slug": "sorting", "name": "Sorting"},
    {"slug": "greedy", "name": "Greedy"},
    {"slug": "depth-first-search", "name": "Depth-First Search"},
    {"slug": "database", "name": "Database"},
    {"slug": "breadth-first-search", "name": "Breadth-First Search"},
    {"slug": "binary-search", "name": "Binary Search"},
    {"slug": "tree", "name": "Tree"},
    {"slug": "matrix", "name": "Matrix"},
    {"slug": "binary-tree", "name": "Binary Tree"},
    {"slug": "two-pointers", "name": "Two Pointers"},
    {"slug": "bit-manipulation", "name": "Bit Manipulation"},
    {"slug": "stack", "name": "Stack"},
    {"slug": "heap-priority-queue", "name": "Heap (Priority Queue)"},
    {"slug": "design", "name": "Design"},
    {"slug": "graph", "name": "Graph"},
    {"slug": "prefix-sum", "name": "Prefix Sum"},
    {"slug": "simulation", "name": "Simulation"},
    {"slug": "counting", "name": "Counting"},
    {"slug": "backtracking", "name": "Backtracking"},
    {"slug": "sliding-window", "name": "Sliding Window"},
    {"slug": "union-find", "name": "Union Find"},
    {"slug": "linked-list", "name": "Linked List"},
    {"slug": "ordered-set", "name": "Ordered Set"},
    {"slug": "monotonic-stack", "name": "Monotonic Stack"},
    {"slug": "enumeration", "name": "Enumeration"},
    {"slug": "recursion", "name": "Recursion"},
    {"slug": "trie", "name": "Trie"},
    {"slug": "divide-and-conquer", "name": "Divide and Conquer"},
    {"slug": "binary-search-tree", "name": "Binary Search Tree"},
    {"slug": "bitmask", "name": "Bitmask"},
    {"slug": "queue", "name": "Queue"},
    {"slug": "memoization", "name": "Memoization"},
    {"slug": "geometry", "name": "Geometry"},
    {"slug": "segment-tree", "name": "Segment Tree"},
    {"slug": "topological-sort", "name": "Topological Sort"},
    {"slug": "number-theory", "name": "Number Theory"},
    {"slug": "hash-function", "name": "Hash Function"},
    {"slug": "binary-indexed-tree", "name": "Binary Indexed Tree"},
    {"slug": "game-theory", "name": "Game Theory"},
    {"slug": "data-stream", "name": "Data Stream"},
    {"slug": "interactive", "name": "Interactive"},
    {"slug": "string-matching", "name": "String Matching"},
    {"slug": "rolling-hash", "name": "Rolling Hash"},
    {"slug": "shortest-path", "name": "Shortest Path"},
    {"slug": "combinatorics", "name": "Combinatorics"},
    {"slug": "randomized", "name": "Randomized"},
    {"slug": "brainteaser", "name": "Brainteaser"},
    {"slug": "monotonic-queue", "name": "Monotonic Queue"},
    {"slug": "merge-sort", "name": "Merge Sort"},
    {"slug": "iterator", "name": "Iterator"},
    {"slug": "concurrency", "name": "Concurrency"},
    {"slug": "doubly-linked-list", "name": "Doubly-Linked List"},
    {"slug": "probability-and-statistics", "name": "Probability and Statistics"},
    {"slug": "quickselect", "name": "Quickselect"},
    {"slug": "bucket-sort", "name": "Bucket Sort"},
    {"slug": "suffix-array", "name": "Suffix Array"},
    {"slug": "minimum-spanning-tree", "name": "Minimum Spanning Tree"},
    {"slug": "counting-sort", "name": "Counting Sort"},
    {"slug": "shell", "name": "Shell"},
    {"slug": "line-sweep", "name": "Line Sweep"},
    {"slug": "reservoir-sampling", "name": "Reservoir Sampling"},
    {"slug": "eulerian-circuit", "name": "Eulerian Circuit"},
    {"slug": "radix-sort", "name": "Radix Sort"},
    {"slug": "strongly-connected-component", "name": "Strongly Connected Component"},
    {"slug": "rejection-sampling", "name": "Rejection Sampling"},
    {"slug": "biconnected-component", "name": "Biconnected Component"},
]

NO_PYTHON_STUB = "# This question has no Python code stub.\n# Generating a generic Python code stub\nclass Solution:\n    def {}(self) -> Any:\n      "
PREMIUM_CUSTOMER_PYTHON_STUB = "# This questions is only for paid Leetcode subscribers.\n# Generating a generic Python code stub\nclass Solution:\n    def {}(self) -> Any:\n      "
